// Protobuf declarations for the spaces management actions of the dblayer

syntax = "proto3";

package fitcheckprotos.dblayer.users;

import "fitcheckprotos/dblayer/confirmation.proto";
import "fitcheckprotos/dblayer/users/account.proto";

/*
 * The following message declarations are requests for something to be done on the database
 * The corresponding payload is transferred directly from the deserialized message object into the database
 * Sanitation, authorization, and other access control is deferred to logical services
 */

message CreateNewSpace {
  // The user id of the collection the new space should be added to
  UserId doc = 1;
  // The name of the new space to be created. Must be unique to user account space collection
  string space_name = 2;
}

message DeleteSpace {
  // The user id of the collection the named space should removed from
  UserId doc = 1;
  // The name of the space to be removed
  string space_name = 2;
}

message AddItemToSpace {
  // The user id of the collection the specified item should placed into the named space
  UserId doc = 1;
  // The name of the space item is added to
  string space_name = 2;
  // The unique identifer for the item to be placed into the space named above
  string item_id = 3;
}

message RemoveItemFromSpace {
  // The user id of the collection the specified item should be removed from the named space
  UserId doc = 1;
  // The name of the space item is to be removed from
  string space_name = 2;
  // The unique identifier for the item to be removed from the space named above
  string item_id = 3;
}


service SpaceManagement {
  rpc NewSpace(CreateNewSpace) returns (ActionCompleted);
  rpc CloseSpace(DeleteSpace) returns (ActionCompleted);
  rpc PutItem(AddItemToSpace) returns (CollectionModified);
  rpc TakeItem(RemoveItemFromSpace) returns (CollectionModified);
}
