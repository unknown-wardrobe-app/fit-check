# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from .dbal_pb2 import *


class UserDocumentServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetUserDocument = channel.unary_unary(
            '/UserDocumentService/GetUserDocument',
            request_serializer=QueryForUser.SerializeToString,
            response_deserializer=GetUser.FromString,
        )
        self.CreateUserDocument = channel.unary_unary(
            '/UserDocumentService/CreateUserDocument',
            request_serializer=NewUser.SerializeToString,
            response_deserializer=CreatedUser.FromString,
        )


class UserDocumentServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetUserDocument(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUserDocument(self, request, context):
        """rpc UpdateUserDocument(UserModification) returns (UserDocument);
        rpc DeleteUserDocument(RemoveUserRequest) returns (UserDocument);
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserDocumentServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetUserDocument': grpc.unary_unary_rpc_method_handler(
            servicer.GetUserDocument,
            request_deserializer=QueryForUser.FromString,
            response_serializer=GetUser.SerializeToString,
        ),
        'CreateUserDocument': grpc.unary_unary_rpc_method_handler(
            servicer.CreateUserDocument,
            request_deserializer=NewUser.FromString,
            response_serializer=CreatedUser.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'UserDocumentService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))

 # This class is part of an EXPERIMENTAL API.


class UserDocumentService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetUserDocument(request,
                        target,
                        options=(),
                        channel_credentials=None,
                        call_credentials=None,
                        insecure=False,
                        compression=None,
                        wait_for_ready=None,
                        timeout=None,
                        metadata=None):
        return grpc.experimental.unary_unary(request, target, '/UserDocumentService/GetUserDocument',
                                             QueryForUser.SerializeToString,
                                             GetUser.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateUserDocument(request,
                           target,
                           options=(),
                           channel_credentials=None,
                           call_credentials=None,
                           insecure=False,
                           compression=None,
                           wait_for_ready=None,
                           timeout=None,
                           metadata=None):
        return grpc.experimental.unary_unary(request, target, '/UserDocumentService/CreateUserDocument',
                                             NewUser.SerializeToString,
                                             CreatedUser.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
